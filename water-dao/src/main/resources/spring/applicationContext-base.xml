<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="                                               
            http://www.springframework.org/schema/beans    
            http://www.springframework.org/schema/beans/spring-beans.xsd    
            http://www.springframework.org/schema/aop  
            http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/tx   
            http://www.springframework.org/schema/tx/spring-tx.xsd
            http://www.springframework.org/schema/mvc    
            http://www.springframework.org/schema/mvc/spring-mvc.xsd
            http://www.springframework.org/schema/context     
            http://www.springframework.org/schema/context/spring-context.xsd">


	<!-- 1.配置注解的自动扫描 -->
<!-- 	<context:component-scan base-package="com.zking.water" /> -->


	<!-- 加载属性文件 -->
	<context:property-placeholder location="classpath:db.properties" />

	<!-- 2.配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- jdbc驱动 -->
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<!-- URL -->
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<!-- 用户名 -->
		<property name="user" value="${jdbc.user}"></property>
		<!-- 密码 -->
		<property name="password" value="${jdbc.password}"></property>

		<!--连接池中保留的最小连接数。 -->
		<property name="minPoolSize" value="3" />

		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="15" />

		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="3" />

		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="60" />

		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="3" />

		<!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements 属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。 
			如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
		<property name="maxStatements" value="0" />

		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="60" />

		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts" value="30" />

		<!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。
			但是数据源仍有效 保留，并在下次调用getConnection()的时候继续尝试获取连接。
			如果设为true，那么在尝试获取连接失败后该数据源将申明已断开并永久关闭。
			Default: false -->
		<property name="breakAfterAcquireFailure" value="true" />
	</bean>


	<!-- 3.配置本地化代理工程bean,这是spring整合hibernate的入口 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<!--配置hibernate使用的连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 指定使用hibernate核心配置文件位置，表示在类路径下加载hibernate.cfg.xml -->
		<property name="configLocations" value="classpath:hibernate.cfg.xml"></property>
	</bean>

	<!-- 配置HibernateTemplate -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>


	<!-- 4.配置事物管理器 -->
	<!-- 一个工具类，begin/commit/rollback事务 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<!-- 注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- xml方式管理事物 -->
	<!-- 配置通知：具体增强逻辑 -->
	<!-- 一个环绕通知 -->
	<!-- 定义事务特性 -->
	<tx:advice id="txAdvice">
		<tx:attributes>
			<!-- 匹配业务类中的方法名称 -->
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />

			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />

			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />

			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="load*" propagation="REQUIRED" read-only="true" />
			<tx:method name="list*" propagation="REQUIRED" read-only="true" />
			<tx:method name="select*" propagation="REQUIRED" read-only="true" />
			<tx:method name="query*" propagation="REQUIRED" read-only="true" />

			<tx:method name="do*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<!-- 配置aop -->
	<!-- 自动代理 -->
	<aop:config>
		<!-- 配置切点：具体哪些方法要增强（真正被增强的方法） -->
		<!-- 分三部分理解 A B C D [* ][*..][*Biz][.*(..)] A:返回类型：*表示返回类型不限 B:包名和类名：即任意包下的以Biz结尾的类或接口 
			C:方法名和参数列表：任意方法名和参数类型和个数不限 -->
		<aop:pointcut expression="execution(* *..*Biz.*(..))" id="bizPointcut" />
		<!-- 配置切面：将增强逻辑作用到切点（通知+切入点） -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="bizPointcut" />
	</aop:config>
	<!-- xml方式管理事物 -->

	<!-- 注解方式管理事物 -->
	<!-- 5.开启事物注解 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->
	<!-- 注解方式管理事物 -->

</beans>